# generated by datamodel-codegen:
#   filename:  https://raw.githubusercontent.com/SchemaStore/schemastore/91ef2e55d02ada2ef031d54f1dc3429c6dc0ccfc/src/schemas/json/traefik-v3.json
#   timestamp: 2025-02-16T16:25:37+00:00

from __future__ import annotations

from typing import Any

from homelab_pydantic import HomelabBaseModel
from pydantic import ConfigDict, Field


class CertificateResolverTailscaleStruct(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )


class AcmeEAB(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    hmac_encoded: str | None = Field(None, alias="hmacEncoded")
    kid: str | None = None


class AcmeHTTPChallenge(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    entry_point: str | None = Field(None, alias="entryPoint")


class AcmePropagation(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    delay_before_checks: str | None = Field(None, alias="delayBeforeChecks")
    disable_ans_checks: bool | None = Field(None, alias="disableANSChecks")
    disable_checks: bool | None = Field(None, alias="disableChecks")
    require_all_rns: bool | None = Field(None, alias="requireAllRNS")


class AcmeTLSChallenge(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )


class ConsulcatalogEndpointHTTPAuthConfig(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    password: str | None = None
    username: str | None = None


class CrdProvider(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    allow_cross_namespace: bool | None = Field(None, alias="allowCrossNamespace")
    allow_empty_services: bool | None = Field(None, alias="allowEmptyServices")
    allow_external_name_services: bool | None = Field(
        None, alias="allowExternalNameServices"
    )
    cert_auth_file_path: str | None = Field(None, alias="certAuthFilePath")
    disable_cluster_scope_resources: bool | None = Field(
        None, alias="disableClusterScopeResources"
    )
    endpoint: str | None = None
    ingress_class: str | None = Field(None, alias="ingressClass")
    label_selector: str | None = Field(None, alias="labelSelector")
    namespaces: list[str] | None = None
    native_lb_by_default: bool | None = Field(None, alias="nativeLBByDefault")
    throttle_duration: str | None = Field(None, alias="throttleDuration")
    token: str | None = None


class EcsProvider(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    access_key_id: str | None = Field(None, alias="accessKeyID")
    auto_discover_clusters: bool | None = Field(None, alias="autoDiscoverClusters")
    clusters: list[str] | None = None
    constraints: str | None = None
    default_rule: str | None = Field(None, alias="defaultRule")
    ecs_anywhere: bool | None = Field(None, alias="ecsAnywhere")
    exposed_by_default: bool | None = Field(None, alias="exposedByDefault")
    healthy_tasks_only: bool | None = Field(None, alias="healthyTasksOnly")
    refresh_seconds: int | None = Field(None, alias="refreshSeconds")
    region: str | None = None
    secret_access_key: str | None = Field(None, alias="secretAccessKey")


class FileProvider(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    debug_log_generated_template: bool | None = Field(
        None, alias="debugLogGeneratedTemplate"
    )
    directory: str | None = None
    filename: str | None = None
    watch: bool | None = None


class GatewayServiceRef(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    name: str | None = None
    namespace: str | None = None


class GatewayStatusAddress(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    hostname: str | None = None
    ip: str | None = None
    service: GatewayServiceRef | None = None


class IngressEndpointIngress(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    hostname: str | None = None
    ip: str | None = None
    published_service: str | None = Field(None, alias="publishedService")


class IngressProvider(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    allow_empty_services: bool | None = Field(None, alias="allowEmptyServices")
    allow_external_name_services: bool | None = Field(
        None, alias="allowExternalNameServices"
    )
    cert_auth_file_path: str | None = Field(None, alias="certAuthFilePath")
    disable_cluster_scope_resources: bool | None = Field(
        None, alias="disableClusterScopeResources"
    )
    disable_ingress_class_lookup: bool | None = Field(
        None, alias="disableIngressClassLookup"
    )
    endpoint: str | None = None
    ingress_class: str | None = Field(None, alias="ingressClass")
    ingress_endpoint: IngressEndpointIngress | None = Field(
        None, alias="ingressEndpoint"
    )
    label_selector: str | None = Field(None, alias="labelSelector")
    namespaces: list[str] | None = None
    native_lb_by_default: bool | None = Field(None, alias="nativeLBByDefault")
    throttle_duration: str | None = Field(None, alias="throttleDuration")
    token: str | None = None


class PingHandler(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    entry_point: str | None = Field(None, alias="entryPoint")
    manual_routing: bool | None = Field(None, alias="manualRouting")
    terminating_status_code: int | None = Field(None, alias="terminatingStatusCode")


class PluginsSettings(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    envs: list[str] | None = None
    mounts: list[str] | None = None


class RedisSentinel(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    latency_strategy: bool | None = Field(None, alias="latencyStrategy")
    master_name: str | None = Field(None, alias="masterName")
    password: str | None = None
    random_strategy: bool | None = Field(None, alias="randomStrategy")
    replica_strategy: bool | None = Field(None, alias="replicaStrategy")
    use_disconnected_replicas: bool | None = Field(
        None, alias="useDisconnectedReplicas"
    )
    username: str | None = None


class RestProvider(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    insecure: bool | None = None


class StaticAPI(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    base_path: str | None = Field(None, alias="basePath")
    dashboard: bool | None = None
    debug: bool | None = None
    disable_dashboard_ad: bool | None = Field(None, alias="disableDashboardAd")
    insecure: bool | None = None


class StaticCore(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    default_rule_syntax: str | None = Field(None, alias="defaultRuleSyntax")


class StaticFastProxyConfig(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    debug: bool | None = None


class StaticForwardedHeaders(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    connection: list[str] | None = None
    insecure: bool | None = None
    trusted_i_ps: list[str] | None = Field(None, alias="trustedIPs")


class StaticForwardingTimeouts(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    dial_timeout: str | None = Field(None, alias="dialTimeout")
    idle_conn_timeout: str | None = Field(None, alias="idleConnTimeout")
    response_header_timeout: str | None = Field(None, alias="responseHeaderTimeout")


class StaticGlobal(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    check_new_version: bool | None = Field(None, alias="checkNewVersion")
    send_anonymous_usage: bool | None = Field(None, alias="sendAnonymousUsage")


class StaticHTTP2Config(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    max_concurrent_streams: int | None = Field(None, alias="maxConcurrentStreams")


class StaticHTTP3Config(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    advertised_port: int | None = Field(None, alias="advertisedPort")


class StaticLifeCycle(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    grace_time_out: str | None = Field(None, alias="graceTimeOut")
    request_accept_grace_timeout: str | None = Field(
        None, alias="requestAcceptGraceTimeout"
    )


class StaticObservabilityConfig(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    access_logs: bool | None = Field(None, alias="accessLogs")
    metrics: bool | None = None
    tracing: bool | None = None


class StaticProxyProtocol(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    insecure: bool | None = None
    trusted_i_ps: list[str] | None = Field(None, alias="trustedIPs")


class StaticRedirectEntryPoint(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    permanent: bool | None = None
    priority: int | None = None
    scheme: str | None = None
    to: str | None = None


class StaticRedirections(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    entry_point: StaticRedirectEntryPoint | None = Field(None, alias="entryPoint")


class StaticRespondingTimeouts(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    idle_timeout: str | None = Field(None, alias="idleTimeout")
    read_timeout: str | None = Field(None, alias="readTimeout")
    write_timeout: str | None = Field(None, alias="writeTimeout")


class StaticSpiffe(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    ids: list[str] | None = None
    trust_domain: str | None = Field(None, alias="trustDomain")


class StaticSpiffeClientConfig(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    workload_api_addr: str | None = Field(None, alias="workloadAPIAddr")


class StaticTLSClientConfig(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    insecure_skip_verify: bool | None = Field(None, alias="insecureSkipVerify")
    root_c_as: list[str] | None = Field(None, alias="rootCAs")
    spiffe: StaticSpiffe | None = None


class StaticUDPConfig(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    timeout: str | None = None


class TypesAccessLogFilters(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    min_duration: str | None = Field(None, alias="minDuration")
    retry_attempts: bool | None = Field(None, alias="retryAttempts")
    status_codes: list[str] | None = Field(None, alias="statusCodes")


class TypesClientTLS(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    ca: str | None = None
    cert: str | None = None
    insecure_skip_verify: bool | None = Field(None, alias="insecureSkipVerify")
    key: str | None = None


class TypesDatadog(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    add_entry_points_labels: bool | None = Field(None, alias="addEntryPointsLabels")
    add_routers_labels: bool | None = Field(None, alias="addRoutersLabels")
    add_services_labels: bool | None = Field(None, alias="addServicesLabels")
    address: str | None = None
    prefix: str | None = None
    push_interval: str | None = Field(None, alias="pushInterval")


class TypesDomain(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    main: str | None = None
    sans: list[str] | None = None


class TypesFieldHeaders(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    default_mode: str | None = Field(None, alias="defaultMode")
    names: dict[str, str] | None = None


class TypesHostResolverConfig(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    cname_flattening: bool | None = Field(None, alias="cnameFlattening")
    resolv_config: str | None = Field(None, alias="resolvConfig")
    resolv_depth: int | None = Field(None, alias="resolvDepth")


class TypesInfluxDB2(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    add_entry_points_labels: bool | None = Field(None, alias="addEntryPointsLabels")
    add_routers_labels: bool | None = Field(None, alias="addRoutersLabels")
    add_services_labels: bool | None = Field(None, alias="addServicesLabels")
    additional_labels: dict[str, str] | None = Field(None, alias="additionalLabels")
    address: str | None = None
    bucket: str | None = None
    org: str | None = None
    push_interval: str | None = Field(None, alias="pushInterval")
    token: str | None = None


class TypesOTelGRPC(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    endpoint: str | None = None
    headers: dict[str, str] | None = None
    insecure: bool | None = None
    tls: TypesClientTLS | None = None


class TypesOTelHTTP(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    endpoint: str | None = None
    headers: dict[str, str] | None = None
    tls: TypesClientTLS | None = None


class TypesOTelLog(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    grpc: TypesOTelGRPC | None = None
    http: TypesOTelHTTP | None = None
    resource_attributes: dict[str, str] | None = Field(None, alias="resourceAttributes")
    service_name: str | None = Field(None, alias="serviceName")


class TypesOTelTracing(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    grpc: TypesOTelGRPC | None = None
    http: TypesOTelHTTP | None = None


class TypesPrometheus(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    add_entry_points_labels: bool | None = Field(None, alias="addEntryPointsLabels")
    add_routers_labels: bool | None = Field(None, alias="addRoutersLabels")
    add_services_labels: bool | None = Field(None, alias="addServicesLabels")
    buckets: list[float] | None = None
    entry_point: str | None = Field(None, alias="entryPoint")
    header_labels: dict[str, str] | None = Field(None, alias="headerLabels")
    manual_routing: bool | None = Field(None, alias="manualRouting")


class TypesStatsd(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    add_entry_points_labels: bool | None = Field(None, alias="addEntryPointsLabels")
    add_routers_labels: bool | None = Field(None, alias="addRoutersLabels")
    add_services_labels: bool | None = Field(None, alias="addServicesLabels")
    address: str | None = None
    prefix: str | None = None
    push_interval: str | None = Field(None, alias="pushInterval")


class TypesTraefikLog(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    compress: bool | None = None
    file_path: str | None = Field(None, alias="filePath")
    format: str | None = None
    level: str | None = None
    max_age: int | None = Field(None, alias="maxAge")
    max_backups: int | None = Field(None, alias="maxBackups")
    max_size: int | None = Field(None, alias="maxSize")
    no_color: bool | None = Field(None, alias="noColor")
    otlp: TypesOTelLog | None = None


class ZkProvider(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    endpoints: list[str] | None = None
    password: str | None = None
    root_key: str | None = Field(None, alias="rootKey")
    username: str | None = None


class AcmeDNSChallenge(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    delay_before_check: str | None = Field(None, alias="delayBeforeCheck")
    disable_propagation_check: bool | None = Field(
        None, alias="disablePropagationCheck"
    )
    propagation: AcmePropagation | None = None
    provider: str | None = None
    resolvers: list[str] | None = None


class ConsulProviderBuilder(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    endpoints: list[str] | None = None
    namespaces: list[str] | None = None
    root_key: str | None = Field(None, alias="rootKey")
    tls: TypesClientTLS | None = None
    token: str | None = None


class ConsulcatalogEndpointConfig(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    address: str | None = None
    datacenter: str | None = None
    endpoint_wait_time: str | None = Field(None, alias="endpointWaitTime")
    http_auth: ConsulcatalogEndpointHTTPAuthConfig | None = Field(
        None, alias="httpAuth"
    )
    scheme: str | None = None
    tls: TypesClientTLS | None = None
    token: str | None = None


class ConsulcatalogProviderBuilder(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    cache: bool | None = None
    connect_aware: bool | None = Field(None, alias="connectAware")
    connect_by_default: bool | None = Field(None, alias="connectByDefault")
    constraints: str | None = None
    default_rule: str | None = Field(None, alias="defaultRule")
    endpoint: ConsulcatalogEndpointConfig | None = None
    exposed_by_default: bool | None = Field(None, alias="exposedByDefault")
    namespaces: list[str] | None = None
    prefix: str | None = None
    refresh_interval: str | None = Field(None, alias="refreshInterval")
    require_consistent: bool | None = Field(None, alias="requireConsistent")
    service_name: str | None = Field(None, alias="serviceName")
    stale: bool | None = None
    strict_checks: list[str] | None = Field(None, alias="strictChecks")
    watch: bool | None = None


class DockerProvider(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    allow_empty_services: bool | None = Field(None, alias="allowEmptyServices")
    constraints: str | None = None
    default_rule: str | None = Field(None, alias="defaultRule")
    endpoint: str | None = None
    exposed_by_default: bool | None = Field(None, alias="exposedByDefault")
    http_client_timeout: str | None = Field(None, alias="httpClientTimeout")
    network: str | None = None
    password: str | None = None
    tls: TypesClientTLS | None = None
    use_bind_port_ip: bool | None = Field(None, alias="useBindPortIP")
    username: str | None = None
    watch: bool | None = None


class DockerSwarmProvider(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    allow_empty_services: bool | None = Field(None, alias="allowEmptyServices")
    constraints: str | None = None
    default_rule: str | None = Field(None, alias="defaultRule")
    endpoint: str | None = None
    exposed_by_default: bool | None = Field(None, alias="exposedByDefault")
    http_client_timeout: str | None = Field(None, alias="httpClientTimeout")
    network: str | None = None
    password: str | None = None
    refresh_seconds: str | None = Field(None, alias="refreshSeconds")
    tls: TypesClientTLS | None = None
    use_bind_port_ip: bool | None = Field(None, alias="useBindPortIP")
    username: str | None = None
    watch: bool | None = None


class EtcdProvider(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    endpoints: list[str] | None = None
    password: str | None = None
    root_key: str | None = Field(None, alias="rootKey")
    tls: TypesClientTLS | None = None
    username: str | None = None


class GatewayProvider(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    cert_auth_file_path: str | None = Field(None, alias="certAuthFilePath")
    endpoint: str | None = None
    experimental_channel: bool | None = Field(None, alias="experimentalChannel")
    label_selector: str | None = Field(None, alias="labelSelector")
    namespaces: list[str] | None = None
    native_lb_by_default: bool | None = Field(None, alias="nativeLBByDefault")
    status_address: GatewayStatusAddress | None = Field(None, alias="statusAddress")
    throttle_duration: str | None = Field(None, alias="throttleDuration")
    token: str | None = None


class HttpProvider(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    endpoint: str
    headers: dict[str, str] | None = None
    poll_interval: str | None = Field(None, alias="pollInterval")
    poll_timeout: str | None = Field(None, alias="pollTimeout")
    tls: TypesClientTLS | None = None


class NomadEndpointConfig(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    address: str | None = None
    endpoint_wait_time: str | None = Field(None, alias="endpointWaitTime")
    region: str | None = None
    tls: TypesClientTLS | None = None
    token: str | None = None


class NomadProviderBuilder(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    allow_empty_services: bool | None = Field(None, alias="allowEmptyServices")
    constraints: str | None = None
    default_rule: str | None = Field(None, alias="defaultRule")
    endpoint: NomadEndpointConfig | None = None
    exposed_by_default: bool | None = Field(None, alias="exposedByDefault")
    namespaces: list[str] | None = None
    prefix: str | None = None
    refresh_interval: str | None = Field(None, alias="refreshInterval")
    stale: bool | None = None
    throttle_duration: str | None = Field(None, alias="throttleDuration")
    watch: bool | None = None


class PluginsDescriptor(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    module_name: str | None = Field(None, alias="moduleName")
    settings: PluginsSettings | None = None
    version: str | None = None


class PluginsLocalDescriptor(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    module_name: str | None = Field(None, alias="moduleName")
    settings: PluginsSettings | None = None


class RedisProvider(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    db: int | None = None
    endpoints: list[str] | None = None
    password: str | None = None
    root_key: str | None = Field(None, alias="rootKey")
    sentinel: RedisSentinel | None = None
    tls: TypesClientTLS | None = None
    username: str | None = None


class StaticEntryPointsTransport(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    keep_alive_max_requests: int | None = Field(None, alias="keepAliveMaxRequests")
    keep_alive_max_time: str | None = Field(None, alias="keepAliveMaxTime")
    life_cycle: StaticLifeCycle | None = Field(None, alias="lifeCycle")
    responding_timeouts: StaticRespondingTimeouts | None = Field(
        None, alias="respondingTimeouts"
    )


class StaticExperimental(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    abort_on_plugin_failure: bool | None = Field(None, alias="abortOnPluginFailure")
    fast_proxy: StaticFastProxyConfig | None = Field(None, alias="fastProxy")
    kubernetes_gateway: bool | None = Field(None, alias="kubernetesGateway")
    local_plugins: dict[str, PluginsLocalDescriptor] | None = Field(
        None, alias="localPlugins"
    )
    otlplogs: bool | None = None
    plugins: dict[str, PluginsDescriptor] | None = None


class StaticProviders(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    consul: ConsulProviderBuilder | None = None
    consul_catalog: ConsulcatalogProviderBuilder | None = Field(
        None, alias="consulCatalog"
    )
    docker: DockerProvider | None = None
    ecs: EcsProvider | None = None
    etcd: EtcdProvider | None = None
    file: FileProvider | None = None
    http: HttpProvider | None = None
    kubernetes_crd: CrdProvider | None = Field(None, alias="kubernetesCRD")
    kubernetes_gateway: GatewayProvider | None = Field(None, alias="kubernetesGateway")
    kubernetes_ingress: IngressProvider | None = Field(None, alias="kubernetesIngress")
    nomad: NomadProviderBuilder | None = None
    plugin: dict[str, dict[str, Any]] | None = None
    providers_throttle_duration: str | None = Field(
        None, alias="providersThrottleDuration"
    )
    redis: RedisProvider | None = None
    rest: RestProvider | None = None
    swarm: DockerSwarmProvider | None = None
    zoo_keeper: ZkProvider | None = Field(None, alias="zooKeeper")


class StaticServersTransport(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    forwarding_timeouts: StaticForwardingTimeouts | None = Field(
        None, alias="forwardingTimeouts"
    )
    insecure_skip_verify: bool | None = Field(None, alias="insecureSkipVerify")
    max_idle_conns_per_host: int | None = Field(None, alias="maxIdleConnsPerHost")
    root_c_as: list[str] | None = Field(None, alias="rootCAs")
    spiffe: StaticSpiffe | None = None


class StaticTCPServersTransport(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    dial_keep_alive: str | None = Field(None, alias="dialKeepAlive")
    dial_timeout: str | None = Field(None, alias="dialTimeout")
    termination_delay: str | None = Field(None, alias="terminationDelay")
    tls: StaticTLSClientConfig | None = None


class StaticTLSConfig(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    cert_resolver: str | None = Field(None, alias="certResolver")
    domains: list[TypesDomain] | None = None
    options: str | None = None


class StaticTracing(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    add_internals: bool | None = Field(None, alias="addInternals")
    captured_request_headers: list[str] | None = Field(
        None, alias="capturedRequestHeaders"
    )
    captured_response_headers: list[str] | None = Field(
        None, alias="capturedResponseHeaders"
    )
    global_attributes: dict[str, str] | None = Field(None, alias="globalAttributes")
    otlp: TypesOTelTracing | None = None
    resource_attributes: dict[str, str] | None = Field(None, alias="resourceAttributes")
    safe_query_params: list[str] | None = Field(None, alias="safeQueryParams")
    sample_rate: float | None = Field(None, alias="sampleRate")
    service_name: str | None = Field(None, alias="serviceName")


class TypesAccessLogFields(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    default_mode: str | None = Field(None, alias="defaultMode")
    headers: TypesFieldHeaders | None = None
    names: dict[str, str] | None = None


class TypesOTLP(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    add_entry_points_labels: bool | None = Field(None, alias="addEntryPointsLabels")
    add_routers_labels: bool | None = Field(None, alias="addRoutersLabels")
    add_services_labels: bool | None = Field(None, alias="addServicesLabels")
    explicit_boundaries: list[float] | None = Field(None, alias="explicitBoundaries")
    grpc: TypesOTelGRPC | None = None
    http: TypesOTelHTTP | None = None
    push_interval: str | None = Field(None, alias="pushInterval")
    service_name: str | None = Field(None, alias="serviceName")


class AcmeConfiguration(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    ca_certificates: list[str] | None = Field(None, alias="caCertificates")
    ca_server: str | None = Field(None, alias="caServer")
    ca_server_name: str | None = Field(None, alias="caServerName")
    ca_system_cert_pool: bool | None = Field(None, alias="caSystemCertPool")
    certificates_duration: int | None = Field(None, alias="certificatesDuration")
    dns_challenge: AcmeDNSChallenge | None = Field(None, alias="dnsChallenge")
    eab: AcmeEAB | None = None
    email: str | None = None
    http_challenge: AcmeHTTPChallenge | None = Field(None, alias="httpChallenge")
    key_type: str | None = Field(None, alias="keyType")
    preferred_chain: str | None = Field(None, alias="preferredChain")
    storage: str | None = None
    tls_challenge: AcmeTLSChallenge | None = Field(None, alias="tlsChallenge")


class StaticCertificateResolver(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    acme: AcmeConfiguration | None = None
    tailscale: CertificateResolverTailscaleStruct | None = None


class StaticHTTPConfig(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    encode_query_semicolons: bool | None = Field(None, alias="encodeQuerySemicolons")
    max_header_bytes: int | None = Field(None, alias="maxHeaderBytes")
    middlewares: list[str] | None = None
    redirections: StaticRedirections | None = None
    tls: StaticTLSConfig | None = None


class TypesAccessLog(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    add_internals: bool | None = Field(None, alias="addInternals")
    buffering_size: int | None = Field(None, alias="bufferingSize")
    fields: TypesAccessLogFields | None = None
    file_path: str | None = Field(None, alias="filePath")
    filters: TypesAccessLogFilters | None = None
    format: str | None = None
    otlp: TypesOTelLog | None = None


class TypesMetrics(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    add_internals: bool | None = Field(None, alias="addInternals")
    datadog: TypesDatadog | None = None
    influx_db2: TypesInfluxDB2 | None = Field(None, alias="influxDB2")
    otlp: TypesOTLP | None = None
    prometheus: TypesPrometheus | None = None
    stats_d: TypesStatsd | None = Field(None, alias="statsD")


class StaticEntryPoint(HomelabBaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    address: str | None = None
    allow_acme_by_pass: bool | None = Field(None, alias="allowACMEByPass")
    as_default: bool | None = Field(None, alias="asDefault")
    forwarded_headers: StaticForwardedHeaders | None = Field(
        None, alias="forwardedHeaders"
    )
    http: StaticHTTPConfig | None = None
    http2: StaticHTTP2Config | None = None
    http3: StaticHTTP3Config | None = None
    observability: StaticObservabilityConfig | None = None
    proxy_protocol: StaticProxyProtocol | None = Field(None, alias="proxyProtocol")
    reuse_port: bool | None = Field(None, alias="reusePort")
    transport: StaticEntryPointsTransport | None = None
    udp: StaticUDPConfig | None = None


class TraefikV3StaticConfiguration(HomelabBaseModel):
    access_log: TypesAccessLog | None = Field(None, alias="accessLog")
    api: StaticAPI | None = None
    certificates_resolvers: dict[str, StaticCertificateResolver] | None = Field(
        None, alias="certificatesResolvers"
    )
    core: StaticCore | None = None
    entry_points: dict[str, StaticEntryPoint] | None = Field(None, alias="entryPoints")
    experimental: StaticExperimental | None = None
    global_: StaticGlobal | None = Field(None, alias="global")
    host_resolver: TypesHostResolverConfig | None = Field(None, alias="hostResolver")
    log: TypesTraefikLog | None = None
    metrics: TypesMetrics | None = None
    ping: PingHandler | None = None
    providers: StaticProviders | None = None
    servers_transport: StaticServersTransport | None = Field(
        None, alias="serversTransport"
    )
    spiffe: StaticSpiffeClientConfig | None = None
    tcp_servers_transport: StaticTCPServersTransport | None = Field(
        None, alias="tcpServersTransport"
    )
    tracing: StaticTracing | None = None
