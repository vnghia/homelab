images:
  remote:
    kanidm:
      repo: ghcr.io/kanidm/kanidmd
      tag: &kanidm-version "devel"
      delete-before-replace: true
    kanidm-client:
      repo: ghcr.io/kanidm/kanidm
      tag: *kanidm-version
      delete-before-replace: true
volumes:
  local:
    kanidm-config:
      backup: false
    kanidm-data:
      backup: false
    kanidm-backup:
      backup:
        source:
          variable: BACKUP
        file: true
    kanidm-client-cache:
      backup: false
services:
  kanidm:
    variables:
      PORT: 8443
      CONFIG:
        extract:
          volume: kanidm-config
        transform:
          path: server.toml
      BACKUP:
        extract:
          volume: kanidm-backup
        transform:
          path: kanidm.backup.json
    config:
      path:
        config:
          variable: CONFIG
        tls-key:
          extract:
            volume: kanidm-data
          transform:
            path: key.pem
        tls-chain:
          extract:
            volume: kanidm-data
          transform:
            path: chain.pem
        db:
          extract:
            volume: kanidm-data
          transform:
            path: kanidm.db
      port:
        variable: PORT
      domain:
        hostname: kanidm
        record: public
      origin:
        hostname: kanidm
        record: public
        scheme: https
      state:
        persons:
          me:
            admin: true
            present: true
            display-name: "Me"
      traefik:
        traefik:
          record: public
          service:
            scheme: https
            port:
              variable: PORT
      dagu:
        docker:
          executor:
            exec:
              container:
          dag:
            tags: ["backup"]
          dags:
            pre-backup-volume:
              command:
                - "/sbin/kanidmd"
                - "database"
                - "backup"
                - "-c"
                - variable: CONFIG
                - variable: BACKUP
    keepasses:
      keepass:
        hostname:
          hostname: kanidm
          record: public
    container:
      image: kanidm
      command:
        - "/sbin/kanidmd"
        - "server"
        - "-c"
        - variable: CONFIG
      healthcheck:
        tests:
          - "CMD"
          - "/sbin/kanidmd"
          - "healthcheck"
          - "-c"
          - variable: CONFIG
        interval: 30s
        timeout: 5s
        retries: 5
        start-interval: 5s
        start-period: 10s
      volumes:
        kanidm-config: /config
        kanidm-data: /data
        kanidm-backup: /backup
      envs:
        KANIDM_TRUST_X_FORWARD_FOR: true
