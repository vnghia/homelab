images:
  remote:
    wud:
      repo: ghcr.io/getwud/wud
      tag: "8.0.1"
volumes:
  local:
    wud-storage: {}
services:
  wud:
    config:
      traefik:
        traefik:
          public: false
          service:
            port:
              env: WUD_SERVER_PORT
    container:
      image: wud
      docker-socket:
        write: false
      healthcheck:
        tests:
          - "CMD"
          - "curl"
          - "--fail"
          - extract:
              env: WUD_SERVER_PORT
            transform:
              string:
                template: "http://localhost:{value}/health"
        interval: 30s
        timeout: 5s
      network:
        default-bridge: true
      volumes:
        wud-storage: /store
      wud:
        template: https://github.com/getwud/wud/releases/tag/${original}
      envs:
        WUD_LOG_FORMAT: json
        WUD_SERVER_PORT: 3000
        WUD_WATCHER_LOCAL_WATCHBYDEFAULT: false
        WUD_WATCHER_LOCAL_WATCHEVENTS: false
        WUD_SERVER_FEATURE_DELETE: false
        WUD_TRIGGER_NTFY_all_AUTH_PASSWORD:
          service: ntfy
          extract:
            secret: user-password
        WUD_TRIGGER_NTFY_all_AUTH_USER:
          service: ntfy
          extract:
            secret: user-username
        WUD_TRIGGER_NTFY_all_TOPIC: docker
        WUD_TRIGGER_NTFY_all_URL:
          service: ntfy
          extract:
            env: NTFY_LISTEN_HTTP
          transform:
            string:
              capture: ":(\\d+)"
              template: "http://ntfy:{value}"
