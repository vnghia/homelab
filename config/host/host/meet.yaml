docker:
  images:
    remote:
      meet-backend:
        repo: lasuite/meet-backend
        tag: &meet-version "v0.1.33"
      meet-frontend:
        repo: lasuite/meet-frontend
        tag: *meet-version
services:
  kanidm:
    config:
      state:
        systems:
          oauth2:
            meet:
              display-name: Meet
              origin-url:
                - extract:
                    hostname: meet
                    record: public
                    scheme: https
                  transform:
                    string:
                      template: "{value}/api/v1.0/callback/"
              origin-landing:
                hostname: meet
                record: public
                scheme: https
              prefer-short-username: true
  livekit:
    secrets:
      meet-api-key:
        length: 16
        special: false
      meet-api-secret: {}
    container:
      envs:
        LIVEKIT_CONFIG:
          yaml:
            keys:
              dict_:
                - - secret: meet-api-key
                  - secret: meet-api-secret
  meet:
    variables:
      BACKEND_PORT: 8000
      FRONTEND_PORT: 8080
      OAUTH_URL:
        extract:
          hostname: kanidm
          record: public
          scheme: https
        transform:
          string:
            template: "{value}/oauth2/openid/meet"
    config:
      traefik:
        backend:
          name: backend
          hostname: meet
          record: public
          rules:
            - (PathPrefix(`/api`) || PathPrefix(`/static`))
          service:
            container: backend
            port:
              svariable: BACKEND_PORT
        backend-admin:
          name: backend-admin
          hostname: meet-admin
          record: private
          rules:
            - (PathPrefix(`/api`) || PathPrefix(`/static`) || PathPrefix(`/admin`))
          service:
            container: backend
            port:
              svariable: BACKEND_PORT
        frontend:
          name: frontend
          hostname: meet
          record: public
          service:
            container: frontend
            port:
              svariable: FRONTEND_PORT
    databases:
      postgres:
        postgres: {}
      valkey:
        valkey: {}
    keepasses:
      keepass:
        username:
          hostname:
            hostname: meet-admin
            record: private
        hostname:
          hostname: meet-admin
          record: private
    secrets:
      django: {}
    containers:
      backend:
        image: meet-backend
        databases:
          - postgres:
            envs:
              username: DB_USER
              password: DB_PASSWORD
              database: DB_NAME
              host: DB_HOST
              port: DB_PORT
          - valkey:
            envs:
              env: REDIS_URL
              database: 1
          - valkey:
            envs:
              env: DJANGO_CELERY_BROKER_URL
              database: 0
        network:
          default-bridge: true
        tmpfs:
          - /tmp
        wud:
          template: https://github.com/suitenumerique/meet/releases/tag/${original}
          include-prefix: v
        envs:
          DJANGO_ALLOWED_HOSTS:
            extract:
              kv:
                user:
                  hostname: meet
                  record: public
                admin:
                  hostname: meet-admin
                  record: private
            transform:
              string:
                template: "{user},{admin}"
          DJANGO_CSRF_TRUSTED_ORIGINS:
            extract:
              kv:
                user:
                  hostname: meet
                  record: public
                  scheme: https
                admin:
                  hostname: meet-admin
                  record: private
                  scheme: https
            transform:
              string:
                template: "{user},{admin}"
          CSRF_TRUSTED_ORIGINS:
            env: DJANGO_CSRF_TRUSTED_ORIGINS
          DJANGO_SECRET_KEY:
            secret: django
          DJANGO_SETTINGS_MODULE: meet.settings
          DJANGO_CONFIGURATION: Production
          FRONTEND_IS_SILENT_LOGIN_ENABLED: true
          FRONTEND_USE_FRENCH_GOV_FOOTER: false
          FRONTEND_USE_PROCONNECT_BUTTON: false
          OIDC_CREATE_USER: true
          OIDC_RP_SIGN_ALGO: ES256
          OIDC_RP_CLIENT_ID: meet
          OIDC_RP_CLIENT_SECRET:
            service: kanidm
            extract:
              export: meet
          OIDC_OP_JWKS_ENDPOINT:
            extract:
              svariable: OAUTH_URL
            transform:
              string:
                template: "{value}/public_key.jwk"
          OIDC_OP_AUTHORIZATION_ENDPOINT:
            extract:
              hostname: kanidm
              record: public
              scheme: https
            transform:
              string:
                template: "{value}/ui/oauth2"
          OIDC_OP_TOKEN_ENDPOINT:
            extract:
              hostname: kanidm
              record: public
              scheme: https
            transform:
              string:
                template: "{value}/oauth2/token"
          OIDC_OP_USER_ENDPOINT:
            extract:
              svariable: OAUTH_URL
            transform:
              string:
                template: "{value}/userinfo"
          OIDC_OP_LOGOUT_ENDPOINT:
            extract:
              hostname: kanidm
              record: public
              scheme: https
            transform:
              string:
                template: "{value}/oauth2/token/revoke"
          OIDC_RP_SCOPES: openid profile email
          LOGIN_REDIRECT_URL:
            hostname: meet
            record: public
            scheme: https
          LOGIN_REDIRECT_URL_FAILURE:
            hostname: meet
            record: public
            scheme: https
          LOGOUT_REDIRECT_URL:
            hostname: meet
            record: public
            scheme: https
          OIDC_USE_NONCE: false
          OIDC_USE_PKCE: true
          OIDC_REDIRECT_REQUIRE_HTTPS: true
          OIDC_REDIRECT_ALLOWED_HOSTS:
            hostname: meet
            record: public
            scheme: "https"
          OIDC_FALLBACK_TO_EMAIL_FOR_IDENTIFICATION: false
          OIDC_STORE_ACCESS_TOKEN: true
          USER_OIDC_FIELDS_TO_FULLNAME: name
          USER_OIDC_FIELD_TO_SHORTNAME: preferred_username
          ALLOW_UNREGISTERED_ROOMS: false
          LIVEKIT_API_URL:
            hostname: livekit
            record: public
            scheme: "https"
          LIVEKIT_API_KEY:
            service: livekit
            extract:
              secret: meet-api-key
          LIVEKIT_API_SECRET:
            service: livekit
            extract:
              secret: meet-api-secret
          RESOURCE_DEFAULT_ACCESS_LEVEL: restricted
          SIGNUP_NEW_USER_TO_MARKETING_EMAIL: false
          ROOM_TELEPHONY_ENABLED: false
      frontend:
        image: meet-frontend
        tmpfs:
          - /tmp
      worker:
        inherit: backend
        command: ["celery", "-A", "meet.celery_app", "worker", "-l", "INFO"]
        wud:
